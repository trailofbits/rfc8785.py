[build-system]
requires = ["flit_core >=3.5,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "rfc8785"
dynamic = ["version"]
description = "A pure-Python implementation of RFC 8785 (JSON Canonicalization Scheme)"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Trail of Bits", email = "opensource@trailofbits.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Topic :: File Formats :: JSON",
    "Topic :: Security :: Cryptography",
]
dependencies = []
requires-python = ">=3.10"

[project.optional-dependencies]
doc = ["pdoc"]
test = ["pytest", "pytest-cov", "coverage"]
lint = [
    # NOTE: ruff is under active development, so we pin conservatively here
    # and let Dependabot periodically perform this update.
    "ruff ~= 0.3",
    "mypy >= 1.0",
    "interrogate",
]
dev = ["rfc8785[doc,test,lint]", "build"]


[project.urls]
Homepage = "https://pypi.org/project/rfc8785"
Documentation = "https://trailofbits.github.io/rfc8785.py/"
Issues = "https://github.com/trailofbits/rfc8785/issues"
Source = "https://github.com/trailofbits/rfc8785"

[tool.flit.module]
name = "rfc8785"

[tool.mypy]
mypy_path = "src"
packages = "rfc8785"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
sqlite_cache = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I", "W", "UP"]

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = [
    "D",    # no docstrings in tests
    "S101", # asserts are expected in tests
]

[tool.interrogate]
# don't enforce documentation coverage for packaging, testing, the virtual
# environment, or the CLI (which is documented separately).
exclude = ["env", "test"]
ignore-semiprivate = true
fail-under = 100
